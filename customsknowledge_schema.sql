-- MySQL Script generated by MySQL Workbench
-- 06/15/15 13:29:39
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema customsknowledge
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema customsknowledge
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `customsknowledge` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `customsknowledge` ;

-- -----------------------------------------------------
-- Table `customsknowledge`.`departments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`departments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` INT NOT NULL,
  `description` TEXT NOT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customsknowledge`.`chapters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`chapters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `department_id` INT NULL,
  `code` INT NULL,
  `description` TEXT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `department_id` (`department_id` ASC),
  CONSTRAINT `fk_chapters_departments_department_id`
    FOREIGN KEY (`department_id`)
    REFERENCES `customsknowledge`.`departments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customsknowledge`.`codes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`codes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `parent_id` INT NULL,
  `chapter_id` INT NULL,
  `code` VARCHAR(22) NULL,
  `description` TEXT NULL,
  `comment` TEXT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `parent_id` (`parent_id` ASC),
  INDEX `chapter_id` (`chapter_id` ASC),
  CONSTRAINT `fk_codes_codes_parent_id`
    FOREIGN KEY (`parent_id`)
    REFERENCES `customsknowledge`.`codes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_codes_chapters_chapter_id`
    FOREIGN KEY (`chapter_id`)
    REFERENCES `customsknowledge`.`chapters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customsknowledge`.`countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`countries` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` CHAR(3) NULL,
  `name` VARCHAR(255) NULL,
  `english_name` VARCHAR(255) NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

INSERT INTO `countries` (`id`, `code`, `name`, `english_name`, `created`, `modified`) VALUES
(1, 'AC', 'Ascension (eiland)', 'Ascension Island', NULL, NULL),
(2, 'AD', 'Andorra', 'Andorra', NULL, NULL),
(3, 'AE', 'Verenigde Arabische Emiraten (Abu Dhabi, Dubai)', 'United Arab Emirates', NULL, NULL),
(4, 'AF', 'Afghanistan', 'Afghanistan', NULL, NULL),
(5, 'AG', 'Antigua en Barbuda', 'Antigua and Barbuda', NULL, NULL),
(6, 'AI', 'Anguilla', 'Anguilla', NULL, NULL),
(7, 'AL', 'Albanië', 'Albania', NULL, NULL),
(8, 'AM', 'Armenië', 'Armenia', NULL, NULL),
(9, 'AN', 'Nederlandse Antillen', 'Netherlands Antilles', NULL, NULL),
(10, 'AO', 'Angola', 'Angola', NULL, NULL),
(11, 'AQ', 'Antarctica', 'Antarctica', NULL, NULL),
(12, 'AR', 'Argentinië', 'Argentina', NULL, NULL),
(13, 'AS', 'Amerikaans Samoa', 'American Samoa', NULL, NULL),
(14, 'AT', 'Oostenrijk', 'Austria', NULL, NULL),
(15, 'AU', 'Australië', 'Australia', NULL, NULL),
(16, 'AW', 'Aruba', 'Aruba', NULL, NULL),
(17, 'AX', 'Åland eilanden', 'Åland Islands', NULL, NULL),
(18, 'AZ', 'Azerbeidzjan', 'Azerbaijan', NULL, NULL),
(19, 'BA', 'Bosnië-Herzegovina', 'Bosnia and Herzegovina', NULL, NULL),
(20, 'BB', 'Barbados', 'Barbados', NULL, NULL),
(21, 'BD', 'Bangladesh', 'Bangladesh', NULL, NULL),
(22, 'BE', 'België', 'Belgium', NULL, NULL),
(23, 'BF', 'Burkina Faso', 'Burkina Faso', NULL, NULL),
(24, 'BG', 'Bulgarije', 'Bulgaria', NULL, NULL),
(25, 'BH', 'Bahrein', 'Bahrain', NULL, NULL),
(26, 'BI', 'Burundi', 'Burundi', NULL, NULL),
(27, 'BJ', 'Benin', 'Benin', NULL, NULL),
(28, 'BM', 'Bermuda', 'Bermuda', NULL, NULL),
(29, 'BN', 'Brunei', 'Brunei Darussalam', NULL, NULL),
(30, 'BO', 'Bolivia', 'Bolivia', NULL, NULL),
(31, 'BR', 'Brazilië', 'Brazil', NULL, NULL),
(32, 'BS', 'Bahama''s', 'Bahamas', NULL, NULL),
(33, 'BT', 'Bhutan', 'Bhutan', NULL, NULL),
(34, 'BV', 'Bouvet (eiland)', 'Bouvet Island', NULL, NULL),
(35, 'BW', 'Botswana', 'Botswana', NULL, NULL),
(36, 'BY', 'Wit-Rusland', 'Belarus', NULL, NULL),
(37, 'BZ', 'Belize', 'Belize', NULL, NULL),
(38, 'CA', 'Canada', 'Canada', NULL, NULL),
(39, 'CC', 'Cocos (Keeling) eilanden', 'Cocos (Keeling) Islands', NULL, NULL),
(40, 'CD', 'Democratische Republiek Congo (Kinshasa)', 'The Democratic Republic of the Congo', NULL, NULL),
(41, 'CF', 'Centraal-Afrikaanse Republiek', 'Central African Republic', NULL, NULL),
(42, 'CG', 'Congo (Brazzaville)', 'Republic of Congo', NULL, NULL),
(43, 'CH', 'Zwitserland', 'Switzerland', NULL, NULL),
(44, 'CI', 'Ivoorkust', 'Côte d''Ivoire', NULL, NULL),
(45, 'CK', 'Cookeilanden', 'Cook Islands', NULL, NULL),
(46, 'CL', 'Chili', 'Chile', NULL, NULL),
(47, 'CM', 'Kameroen', 'Cameroon', NULL, NULL),
(48, 'CN', 'China (Zhongguo)', 'China', NULL, NULL),
(49, 'CO', 'Colombia', 'Colombia', NULL, NULL),
(50, 'CR', 'Costa Rica', 'Costa Rica', NULL, NULL),
(51, 'CS', 'Servië & Montenegro', 'Serbia and Montenegro', NULL, NULL),
(52, 'CU', 'Cuba', 'Cuba', NULL, NULL),
(53, 'CV', 'Kaapverdië', 'Cape Verde', NULL, NULL),
(54, 'CX', 'Christmaseiland', 'Christmas Island', NULL, NULL),
(55, 'CY', 'Cyprus', 'Cyprus', NULL, NULL),
(56, 'CZ', 'Tsjechië', 'Czech Republic', NULL, NULL),
(57, 'DE', 'Duitsland', 'Germany', NULL, NULL),
(58, 'DJ', 'Djibouti', 'Djibouti', NULL, NULL),
(59, 'DK', 'Denemarken', 'Denmark', NULL, NULL),
(60, 'DM', 'Dominica', 'Dominica', NULL, NULL),
(61, 'DO', 'Dominicaanse Republiek', 'Dominican Republic', NULL, NULL),
(62, 'DZ', 'Algerije', 'Algeria', NULL, NULL),
(63, 'EC', 'Ecuador', 'Ecuador', NULL, NULL),
(64, 'EE', 'Estland (Eesti)', 'Estonia', NULL, NULL),
(65, 'EG', 'Egypte', 'Egypt', NULL, NULL),
(66, 'EH', 'West-Sahara', 'Western Sahara', NULL, NULL),
(67, 'ER', 'Eritrea', 'Eritrea', NULL, NULL),
(68, 'ES', 'Spanje', 'Spain', NULL, NULL),
(69, 'ET', 'Ethiopië', 'Ethiopia', NULL, NULL),
(70, 'EU', 'Europese Unie', 'European Union', NULL, NULL),
(71, 'FI', 'Finland (Suomi Finland)', 'Finland', NULL, NULL),
(72, 'FJ', 'Fiji', 'Fiji', NULL, NULL),
(73, 'FK', 'Falklandeilanden', 'Falkland Islands (Islas Malvinas)', NULL, NULL),
(74, 'FM', 'Micronesië', 'Federated States of Micronesia', NULL, NULL),
(75, 'FO', 'Faeröer', 'Faroe Islands', NULL, NULL),
(76, 'FR', 'Frankrijk', 'France', NULL, NULL),
(77, 'GA', 'Gabon', 'Gabon', NULL, NULL),
(78, 'GB', 'Groot-Brittannië', 'Great Britain', NULL, NULL),
(79, 'GD', 'Grenada', 'Grenada', NULL, NULL),
(80, 'GE', 'Georgië', 'Georgia', NULL, NULL),
(81, 'GF', 'Frans-Guyana', 'French Guiana', NULL, NULL),
(82, 'GG', 'Guernsey', 'Guernsey', NULL, NULL),
(83, 'GH', 'Ghana', 'Ghana', NULL, NULL),
(84, 'GI', 'Gibraltar', 'Gibraltar', NULL, NULL),
(85, 'GL', 'Groenland (Kalaallit Nunaat)', 'Greenland', NULL, NULL),
(86, 'GM', 'Gambia', 'Gambia', NULL, NULL),
(87, 'GN', 'Republiek Guinee', 'Guinea', NULL, NULL),
(88, 'GP', 'Guadeloupe', 'Guadeloupe', NULL, NULL),
(89, 'GQ', 'Equatoriaal-Guinea', 'Equatorial Guinea', NULL, NULL),
(90, 'GR', 'Griekenland (Ellas, Hellas)', 'Greece', NULL, NULL),
(91, 'GS', 'Zuid-Georgia en de Zuidelijke Sandwicheilanden', 'South Georgia and the South Sandwich Islands', NULL, NULL),
(92, 'GT', 'Guatemala', 'Guatemala', NULL, NULL),
(93, 'GU', 'Guam', 'Guam', NULL, NULL),
(94, 'GW', 'Guinee-Bissau', 'Guinea-Bissau', NULL, NULL),
(95, 'GY', 'Guyana', 'Guyana', NULL, NULL),
(96, 'HK', 'Hongkong (Xianggang)', 'Hong Kong', NULL, NULL),
(97, 'HM', 'Heard en McDonald (eilanden)', 'Heard Island and McDonald Islands', NULL, NULL),
(98, 'HN', 'Honduras', 'Honduras', NULL, NULL),
(99, 'HR', 'Kroatië', 'Croatia (Hrvatska)', NULL, NULL),
(100, 'HT', 'Haïti', 'Haiti', NULL, NULL),
(101, 'HU', 'Hongarije (Magyar)', 'Hungary', NULL, NULL),
(102, 'ID', 'Indonesië', 'Indonesia', NULL, NULL),
(103, 'IE', 'Ierland (Eire)', 'Ireland', NULL, NULL),
(104, 'IL', 'Israël', 'Israel', NULL, NULL),
(105, 'IM', 'Man (Ellan Vannin) (eiland)', 'Isle of Man', NULL, NULL),
(106, 'IN', 'India', 'India', NULL, NULL),
(107, 'IO', 'Britse gebiedsdelen in de Indische Oceaan: Chagos', 'British Indian Ocean Territory', NULL, NULL),
(108, 'IQ', 'Irak', 'Iraq', NULL, NULL),
(109, 'IR', 'Iran', 'Islamic Republic of Iran', NULL, NULL),
(110, 'IS', 'IJsland', 'Iceland', NULL, NULL),
(111, 'IT', 'Italië', 'Italy', NULL, NULL),
(112, 'JE', 'Jersey', 'Jersey', NULL, NULL),
(113, 'JM', 'Jamaica', 'Jamaica', NULL, NULL),
(114, 'JO', 'Jordanië', 'Jordan', NULL, NULL),
(115, 'JP', 'Japan (Nippon)', 'Japan', NULL, NULL),
(116, 'KE', 'Kenya', 'Kenya', NULL, NULL),
(117, 'KG', 'Kirgizië', 'Kyrgyzstan', NULL, NULL),
(118, 'KH', 'Cambodja', 'Cambodia', NULL, NULL),
(119, 'KI', 'Kiribati', 'Kiribati', NULL, NULL),
(120, 'KM', 'Comoren', 'Comoros', NULL, NULL),
(121, 'KN', 'Sint Kitts en Nevis', 'Saint Kitts and Nevis', NULL, NULL),
(122, 'KP', 'Noord Korea', 'Democratic People''s Republic Korea', NULL, NULL),
(123, 'KR', 'Zuid Korea', 'Republic of Korea', NULL, NULL),
(124, 'KW', 'Koeweit', 'Kuwait', NULL, NULL),
(125, 'KY', 'Caymaneilanden', 'Cayman Islands', NULL, NULL),
(126, 'KZ', 'Kazachstan', 'Kazakhstan', NULL, NULL),
(127, 'LA', 'Laos', 'Lao People''s Democratic Republic', NULL, NULL),
(128, 'LB', 'Libanon', 'Lebanon', NULL, NULL),
(129, 'LC', 'Sint Lucia', 'Saint Lucia', NULL, NULL),
(130, 'LI', 'Liechtenstein', 'Liechtenstein', NULL, NULL),
(131, 'LK', 'Sri Lanka', 'Sri Lanka', NULL, NULL),
(132, 'LR', 'Liberia', 'Liberia', NULL, NULL),
(133, 'LS', 'Lesotho', 'Lesotho', NULL, NULL),
(134, 'LT', 'Litouwen (Lietuva)', 'Lithuania', NULL, NULL),
(135, 'LU', 'Luxemburg (Lëtzebuerg)', 'Luxembourg', NULL, NULL),
(136, 'LV', 'Letland', 'Latvia', NULL, NULL),
(137, 'LY', 'Libië', 'Libyan Arab Jamahiriya', NULL, NULL),
(138, 'MA', 'Marokko', 'Morocco', NULL, NULL),
(139, 'MC', 'Monaco', 'Monaco', NULL, NULL),
(140, 'MD', 'Moldavië', 'Republic of Moldova', NULL, NULL),
(141, 'MG', 'Madagaskar', 'Madagascar', NULL, NULL),
(142, 'MH', 'Marshalleilanden', 'Marshall Islands', NULL, NULL),
(143, 'MK', 'Macedonië', 'The former Yugoslav Republic of Macedonia', NULL, NULL),
(144, 'ML', 'Mali', 'Mali', NULL, NULL),
(145, 'MM', 'Myanmar', 'Myanmar', NULL, NULL),
(146, 'MN', 'Mongolië', 'Mongolia', NULL, NULL),
(147, 'MO', 'Macau (Aomen)', 'Macao', NULL, NULL),
(148, 'MP', 'Noordelijke Marianen-eilanden', 'Northern Mariana Islands', NULL, NULL),
(149, 'MQ', 'Martinique', 'Martinique', NULL, NULL),
(150, 'MR', 'Mauritanië', 'Mauritania', NULL, NULL),
(151, 'MS', 'Montserrat', 'Montserrat', NULL, NULL),
(152, 'MT', 'Malta', 'Malta', NULL, NULL),
(153, 'MU', 'Mauritius', 'Mauritius', NULL, NULL),
(154, 'MV', 'Maldiven', 'Maldives', NULL, NULL),
(155, 'MW', 'Malawi', 'Malawi', NULL, NULL),
(156, 'MX', 'Mexico', 'Mexico', NULL, NULL),
(157, 'MY', 'Maleisië', 'Malaysia', NULL, NULL),
(158, 'MZ', 'Mozambique', 'Mozambique', NULL, NULL),
(159, 'NA', 'Namibië', 'Namibia', NULL, NULL),
(160, 'NC', 'Nieuw-Caledonië', 'New Caledonia', NULL, NULL),
(161, 'NE', 'Niger', 'Niger', NULL, NULL),
(162, 'NF', 'Norfolk (eiland)', 'Norfolk Island', NULL, NULL),
(163, 'NG', 'Nigeria', 'Nigeria', NULL, NULL),
(164, 'NI', 'Nicaragua', 'Nicaragua', NULL, NULL),
(165, 'NL', 'Nederland', 'Netherlands', NULL, NULL),
(166, 'NO', 'Noorwegen (Norge)', 'Norway', NULL, NULL),
(167, 'NP', 'Nepal', 'Nepal', NULL, NULL),
(168, 'NR', 'Nauru', 'Nauru', NULL, NULL),
(169, 'NU', 'Niue', 'Niue', NULL, NULL),
(170, 'NZ', 'Nieuw-Zeeland', 'New Zealand', NULL, NULL),
(171, 'OM', 'Oman', 'Oman', NULL, NULL),
(172, 'PA', 'Panama', 'Panama', NULL, NULL),
(173, 'PE', 'Peru', 'Peru', NULL, NULL),
(174, 'PF', 'Frans Polynesië (Tahiti)', 'French Polynesia', NULL, NULL),
(175, 'PG', 'Papua Nieuw-Guinea', 'Papua New Guinea', NULL, NULL),
(176, 'PH', 'Filipijnen', 'Philippines', NULL, NULL),
(177, 'PK', 'Pakistan', 'Pakistan', NULL, NULL),
(178, 'PL', 'Polen (Polska)', 'Poland', NULL, NULL),
(179, 'PM', 'Sint Pierre en Miquelon', 'Saint Pierre and Miquelon', NULL, NULL),
(180, 'PN', 'Pitcairn (eiland)', 'Pitcairn Island', NULL, NULL),
(181, 'PR', 'Puerto Rico', 'Puerto Rico', NULL, NULL),
(182, 'PS', 'Palestijnse bezette gebieden', 'Palestinian territory, occupied', NULL, NULL),
(183, 'PT', 'Portugal', 'Portugal', NULL, NULL),
(184, 'PW', 'Palau (Belau)', 'Palau', NULL, NULL),
(185, 'PY', 'Paraguay', 'Paraguay', NULL, NULL),
(186, 'QA', 'Qatar', 'Qatar', NULL, NULL),
(187, 'RE', 'Réunion (eiland)', 'Reunion Island', NULL, NULL),
(188, 'RO', 'Roemenië (Rumania, Roumania)', 'Romania', NULL, NULL),
(189, 'RU', 'Rusland', 'Russian Federation', NULL, NULL),
(190, 'RW', 'Rwanda', 'Rwanda', NULL, NULL),
(191, 'SA', 'Saoedi-Arabië', 'Saudi Arabia', NULL, NULL),
(192, 'SB', 'Salomonseilanden', 'Solomon Islands', NULL, NULL),
(193, 'SC', 'Seychellen', 'Seychelles', NULL, NULL),
(194, 'SD', 'Soedan', 'Sudan', NULL, NULL),
(195, 'SE', 'Zweden (Sverige)', 'Sweden', NULL, NULL),
(196, 'SG', 'Singapore', 'Singapore', NULL, NULL),
(197, 'SH', 'Sint Helena', 'Saint Helena', NULL, NULL),
(198, 'SI', 'Slovenië', 'Slovenia', NULL, NULL),
(199, 'SJ', 'Svalbard en Jan Mayen (eilanden)', 'Svalbard and Jan Mayen Islands', NULL, NULL),
(200, 'SK', 'Slowakije', 'Slovakia', NULL, NULL),
(201, 'SL', 'Sierra Leone', 'Sierra Leone', NULL, NULL),
(202, 'SM', 'San Marino', 'San Marino', NULL, NULL),
(203, 'SN', 'Senegal', 'Senegal', NULL, NULL),
(204, 'SO', 'Somalië', 'Somalia', NULL, NULL),
(205, 'SR', 'Suriname', 'Suriname', NULL, NULL),
(206, 'ST', 'Sao Tomé en Principe (eilanden)', 'Sao Tome and Principe', NULL, NULL),
(207, '(SU', 'Sovjet Unie', 'Soviet Union', NULL, NULL),
(208, 'SV', 'El Salvador', 'El Salvador', NULL, NULL),
(209, 'SY', 'Syrië', 'Syrian Arab Republic', NULL, NULL),
(210, 'SZ', 'Swaziland', 'Swaziland', NULL, NULL),
(211, 'TC', 'Turks- en Caicoseilanden', 'Turks and Caicos Islands', NULL, NULL),
(212, 'TD', 'Tsjaad', 'Chad', NULL, NULL),
(213, 'TF', 'Franse Zuidelijke gebieden (Terres Australes et An', 'French Southern Territories', NULL, NULL),
(214, 'TG', 'Togo', 'Togo', NULL, NULL),
(215, 'TH', 'Thailand', 'Thailand', NULL, NULL),
(216, 'TJ', 'Tadzjikistan', 'Tajikistan', NULL, NULL),
(217, 'TK', 'Tokelau', 'Tokelau', NULL, NULL),
(218, 'TL', 'Oost-Timor', 'Timor-Leste', NULL, NULL),
(219, 'TM', 'Turkmenistan', 'Turkmenistan', NULL, NULL),
(220, 'TN', 'Tunesië', 'Tunisia', NULL, NULL),
(221, 'TO', 'Tonga', 'Tonga', NULL, NULL),
(222, 'TP', 'Oost-Timor (Timor Lorosae, Timor Leste)', 'East Timor', NULL, NULL),
(223, 'TR', 'Turkije', 'Turkey', NULL, NULL),
(224, 'TT', 'Trinidad en Tobago', 'Trinidad and Tobago', NULL, NULL),
(225, 'TV', 'Tuvalu', 'Tuvalu', NULL, NULL),
(226, 'TW', 'Taiwan', 'Taiwan (Province of China)', NULL, NULL),
(227, 'TZ', 'Tanzania', 'United Republic of Tanzania', NULL, NULL),
(228, 'UA', 'Oekraïne', 'Ukraine', NULL, NULL),
(229, 'UG', 'Oeganda', 'Uganda', NULL, NULL),
(230, 'UK', 'Verenigd Koninkrijk (Groot-Brittannië)', 'United Kingdom', NULL, NULL),
(231, 'UM', 'Verenigde Staten: kleine eilanden', 'United States Minor Outlying Islands', NULL, NULL),
(232, 'US', 'Verenigde Staten', 'United States', NULL, NULL),
(233, 'UY', 'Uruguay', 'Uruguay', NULL, NULL),
(234, 'UZ', 'Oezbekistan', 'Uzbekistan', NULL, NULL),
(235, 'VA', 'Vaticaanstad (Holy See, Santa Sede)', 'Vatican City State', NULL, NULL),
(236, 'VC', 'Sint Vincent en de Grenadinen', 'Saint Vincent and the Grenadines', NULL, NULL),
(237, 'VE', 'Venezuela', 'Venezuela', NULL, NULL),
(238, 'VG', 'Britse Maagdeneilanden', 'Virgin Islands (British)', NULL, NULL),
(239, 'VI', 'Amerikaanse Maagdeneilanden', 'Virgin Islands (US)', NULL, NULL),
(240, 'VN', 'Vietnam', 'Viet Nam', NULL, NULL),
(241, 'VU', 'Vanuatu', 'Vanuatu', NULL, NULL),
(242, 'WF', 'Wallis en Futuna (eilanden)', 'Wallis and Futuna Islands', NULL, NULL),
(243, 'WS', 'Samoa', 'Samoa', NULL, NULL),
(244, 'YE', 'Jemen', 'Yemen', NULL, NULL),
(245, 'YT', 'Mayotte', 'Mayotte', NULL, NULL),
(246, 'YU', 'Joegoslavië', 'Yugoslavia', NULL, NULL),
(247, 'ZA', 'Zuid-Afrika', 'South Africa', NULL, NULL),
(248, 'ZM', 'Zambia', 'Zambia', NULL, NULL),
(249, '', 'Zaïre', 'Zaire', NULL, NULL),
(250, 'ZW', 'Zimbabwe', 'Zimbabwe', NULL, NULL);

-- -----------------------------------------------------
-- Table `customsknowledge`.`statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`statuses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customsknowledge`.`regulations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`regulations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `url` VARCHAR(255) NULL,
  `code` VARCHAR(255) NULL,
  `date_verdict` DATE NULL,
  `date_start` DATE NULL,
  `date_end` DATE NULL,
  `status_id` INT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `status_Id` (`status_id` ASC),
  CONSTRAINT `fk_regulations_statuses_status_id`
    FOREIGN KEY (`status_id`)
    REFERENCES `customsknowledge`.`statuses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customsknowledge`.`customs_duties`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`customs_duties` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code_id` INT NULL,
  `country_id` INT NULL,
  `regulation_id` INT NULL,
  `created` DATETIME NULL,
  `modified` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `code_id` (`code_id` ASC),
  INDEX `country_id` (`country_id` ASC),
  INDEX `regulation_id` (`regulation_id` ASC),
  CONSTRAINT `fk_categories_codes_code_id`
    FOREIGN KEY (`code_id`)
    REFERENCES `customsknowledge`.`codes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_categories_countries_country_id`
    FOREIGN KEY (`country_id`)
    REFERENCES `customsknowledge`.`countries` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_categories_regulations_regulation_id`
    FOREIGN KEY (`regulation_id`)
    REFERENCES `customsknowledge`.`regulations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customsknowledge`.`code_closures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customsknowledge`.`code_closures` (
  `parent_id` INT NOT NULL,
  `child_id` INT NOT NULL,
  `depth` INT NULL,
  PRIMARY KEY (`parent_id`, `child_id`),
  INDEX `parent_id` (`parent_id` ASC),
  INDEX `child_id` (`child_id` ASC),
  CONSTRAINT `fk_category_closures_codes_parent_id`
    FOREIGN KEY (`parent_id`)
    REFERENCES `customsknowledge`.`codes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_category_closures_codes_child_id`
    FOREIGN KEY (`child_id`)
    REFERENCES `customsknowledge`.`codes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `customsknowledge` ;

-- -----------------------------------------------------
-- procedure UpdateClosure
-- -----------------------------------------------------

DELIMITER $$
USE `customsknowledge`$$
CREATE PROCEDURE `UpdateClosure` (IN code_id INT, IN code_parent_id INT)
BEGIN
	INSERT INTO code_closures(parent_id, child_id, depth) VALUES (code_id, code_id, 0);
	INSERT INTO code_closures(parent_id, child_id, depth)
		SELECT p.parent_id, c.child_id, p.depth+c.depth+1 FROM code_closures p, code_closures c 
		WHERE p.child_id=code_parent_id AND c.parent_id=code_id;
END
$$

DELIMITER ;
USE `customsknowledge`;

DELIMITER $$
USE `customsknowledge`$$
CREATE DEFINER = CURRENT_USER TRIGGER `customsknowledge`.`codes_AFTER_INSERT` AFTER INSERT ON `codes` FOR EACH ROW
BEGIN
	CALL UpdateClosure(NEW.id, NEW.parent_id);
END
$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
